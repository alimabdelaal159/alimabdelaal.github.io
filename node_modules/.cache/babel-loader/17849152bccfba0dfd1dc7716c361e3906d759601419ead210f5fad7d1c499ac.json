{"ast":null,"code":"var _jsxFileName = \"E:\\\\react\\\\ITI React\\\\my-app-no1\\\\src\\\\components\\\\GradientCircleProgressbar.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CircleContainer = styled.div`\n  display: inline-block;\n  border-radius: 100%;\n  position: relative;`;\n_c = CircleContainer;\nconst PercentageContainer = styled.div`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n  top: 0;\n  left: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  text-align: center,`;\n_c2 = PercentageContainer;\nconst StyledCircle = styled.circle`\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;`;\n// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\n_c3 = StyledCircle;\nconst GradientCircleProgressbar = _ref => {\n  let {\n    percentage,\n    width,\n    strokeWidth,\n    fontSize,\n    fontColor,\n    fontFamily,\n    primaryColor,\n    secondaryColor,\n    fill,\n    hidePercentageText,\n    strokeLinecap\n  } = _ref;\n  const PI = 3.14;\n  const R = width / 2 - strokeWidth * 2;\n  let circumference = 2 * PI * R;\n  let offset = circumference - percentage / 100 * circumference;\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '');\n  return /*#__PURE__*/_jsxDEV(CircleContainer, {\n    className: \"react-super-progressbar__base\",\n    style: {\n      height: `${width}px`,\n      width: `${width}px`\n    },\n    children: [!hidePercentageText ? /*#__PURE__*/_jsxDEV(PercentageContainer, {\n      className: \"react-super-progressbar__percentage-container\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"react-super-progressbars__percentage\",\n        style: {\n          fontSize,\n          fontFamily,\n          color: fontColor\n        },\n        children: [percentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"svg\", {\n      width: \"100%\",\n      height: \"100%\",\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      children: [/*#__PURE__*/_jsxDEV(\"linearGradient\", {\n        id: gradientId,\n        x1: \"0%\",\n        y1: \"0%\",\n        x2: \"100%\",\n        y2: \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"0%\",\n          stopColor: primaryColor[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"stop\", {\n          offset: \"100%\",\n          stopColor: primaryColor[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        strokeWidth: strokeWidth,\n        fill: \"transparent\",\n        r: R,\n        cx: width / 2,\n        cy: width / 2,\n        stroke: secondaryColor,\n        strokeDasharray: `${circumference} ${circumference}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledCircle, {\n        strokeWidth: strokeWidth,\n        fill: fill,\n        r: R,\n        cx: width / 2,\n        cy: width / 2,\n        stroke: `url(#${gradientId})`,\n        strokeLinecap: strokeLinecap,\n        strokeDasharray: `${circumference} ${circumference}`,\n        strokeDashoffset: offset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_c4 = GradientCircleProgressbar;\nGradientCircleProgressbar.propTypes = {\n  percentage: PropTypes.number.isRequired,\n  width: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),\n  fontSize: PropTypes.string,\n  fontColor: PropTypes.string,\n  fontFamily: PropTypes.string,\n  primaryColor: PropTypes.array,\n  secondaryColor: PropTypes.string,\n  fill: PropTypes.string,\n  hidePercentageText: PropTypes.bool\n};\nGradientCircleProgressbar.defaultProps = {\n  width: 200,\n  strokeWidth: 5,\n  strokeLinecap: 'round',\n  fontSize: 'inherit',\n  fontColor: 'inherit',\n  fontFamily: 'inherit',\n  primaryColor: ['#00BBFF', '#92d7f1'],\n  secondaryColor: 'transparent',\n  fill: 'transparent'\n};\nexport default GradientCircleProgressbar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"CircleContainer\");\n$RefreshReg$(_c2, \"PercentageContainer\");\n$RefreshReg$(_c3, \"StyledCircle\");\n$RefreshReg$(_c4, \"GradientCircleProgressbar\");","map":{"version":3,"names":["React","PropTypes","styled","jsxDEV","_jsxDEV","CircleContainer","div","_c","PercentageContainer","_c2","StyledCircle","circle","_c3","GradientCircleProgressbar","_ref","percentage","width","strokeWidth","fontSize","fontColor","fontFamily","primaryColor","secondaryColor","fill","hidePercentageText","strokeLinecap","PI","R","circumference","offset","gradientId","replace","className","style","height","children","color","fileName","_jsxFileName","lineNumber","columnNumber","version","xmlns","id","x1","y1","x2","y2","stopColor","r","cx","cy","stroke","strokeDasharray","strokeDashoffset","_c4","propTypes","number","isRequired","oneOf","string","array","bool","defaultProps","$RefreshReg$"],"sources":["E:/react/ITI React/my-app-no1/src/components/GradientCircleProgressbar.jsx"],"sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styled from '@emotion/styled'\r\n\r\nconst CircleContainer = styled.div`\r\n  display: inline-block;\r\n  border-radius: 100%;\r\n  position: relative;`\r\n\r\nconst PercentageContainer = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center,`\r\n\r\nconst StyledCircle = styled.circle`\r\n  transform: rotate(-90deg);\r\n  transform-origin: 50% 50%;`\r\n// const CircleContainer = ({ children, style }) => <div className=\"react-super-progressbar__base\" style={style}>{children}</div>\r\n// const PercentageContainer = ({ children }) => <div className=\"react-super-progressbar__percentage-container\">{children}</div>\r\n// const StyledCircle = ({ children, ...props }) => <circle className=\"react-super-progressbar__styled-circle\" {...props}>{children}</circle>\r\n\r\nconst GradientCircleProgressbar = ({\r\n  percentage,\r\n  width,\r\n  strokeWidth,\r\n  fontSize,\r\n  fontColor,\r\n  fontFamily,\r\n  primaryColor,\r\n  secondaryColor,\r\n  fill,\r\n  hidePercentageText,\r\n  strokeLinecap,\r\n}) => {\r\n  const PI = 3.14\r\n  const R = (width / 2) - (strokeWidth * 2)\r\n\r\n  let circumference = 2 * PI * R\r\n  let offset = circumference - percentage / 100 * circumference\r\n  let gradientId = `${primaryColor[0]}${primaryColor[1]}`.replace(/#/g, '')\r\n\r\n  return (\r\n    <CircleContainer\r\n      className=\"react-super-progressbar__base\"\r\n      style={{\r\n        height: `${width}px`,\r\n        width: `${width}px`,\r\n      }}\r\n    >\r\n      {!hidePercentageText ?\r\n        <PercentageContainer className=\"react-super-progressbar__percentage-container\">\r\n          <span\r\n            className=\"react-super-progressbars__percentage\"\r\n            style={{\r\n              fontSize,\r\n              fontFamily,\r\n              color: fontColor,\r\n            }}\r\n          >\r\n            {percentage}%\r\n          </span>\r\n        </PercentageContainer>\r\n        : null\r\n      }\r\n\r\n      <svg\r\n        width='100%'\r\n        height='100%'\r\n        version='1.1'\r\n        xmlns='http://www.w3.org/2000/svg'\r\n      >\r\n        <linearGradient\r\n          id={gradientId}\r\n          x1='0%'\r\n          y1='0%'\r\n          x2='100%'\r\n          y2='100%'\r\n        >\r\n          <stop offset='0%' stopColor={primaryColor[0]}/>\r\n          <stop offset='100%' stopColor={primaryColor[1]}/>\r\n        </linearGradient>\r\n        <circle\r\n          strokeWidth={strokeWidth}\r\n          fill='transparent'\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={secondaryColor}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n        />\r\n        <StyledCircle\r\n          strokeWidth={strokeWidth}\r\n          fill={fill}\r\n          r={R}\r\n          cx={width / 2}\r\n          cy={width / 2}\r\n          stroke={`url(#${gradientId})`}\r\n          strokeLinecap={strokeLinecap}\r\n          strokeDasharray={`${circumference} ${circumference}`}\r\n          strokeDashoffset={offset}\r\n        />\r\n      </svg>\r\n    </CircleContainer>\r\n  )\r\n}\r\n\r\nGradientCircleProgressbar.propTypes = {\r\n  percentage: PropTypes.number.isRequired,\r\n  width: PropTypes.number,\r\n  strokeWidth: PropTypes.number,\r\n  strokeLinecap: PropTypes.oneOf(['round', 'square', 'butt']),\r\n  fontSize: PropTypes.string,\r\n  fontColor: PropTypes.string,\r\n  fontFamily: PropTypes.string,\r\n  primaryColor: PropTypes.array,\r\n  secondaryColor: PropTypes.string,\r\n  fill: PropTypes.string,\r\n  hidePercentageText: PropTypes.bool,\r\n}\r\n\r\nGradientCircleProgressbar.defaultProps = {\r\n  width: 200,\r\n  strokeWidth: 5,\r\n  strokeLinecap: 'round',\r\n  fontSize: 'inherit',\r\n  fontColor: 'inherit',\r\n  fontFamily: 'inherit',\r\n  primaryColor: ['#00BBFF', '#92d7f1'],\r\n  secondaryColor: 'transparent',\r\n  fill: 'transparent',\r\n}\r\n\r\nexport default GradientCircleProgressbar"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}